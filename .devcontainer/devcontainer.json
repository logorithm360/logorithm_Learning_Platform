{
  "name": "Online Learning Monorepo Dev",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "postCreateCommand": "echo 'Dev container ready! Build your service as needed.'",
  "customizations": {
    "vscode": {
      "tasks": [
        // Spring Boot Services
        {
          "label": "Build user_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t user_service:dev ./user_service"
        },
        {
          "label": "Build course_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t course_service:dev ./course_service"
        },
        {
          "label": "Build content_service Docker image (FastAPI)",
          "type": "shell",
          "command": "docker build -t content_service:dev ./content_service"
        },
        {
          "label": "Build assessment_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t assessment_service:dev ./assessment_service"
        },
        {
          "label": "Build gamification_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t gamification_service:dev ./gamification_service"
        },
        {
          "label": "Build live-session_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t live-session_service:dev ./live-session_service"
        },
        {
          "label": "Build collaboration_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t collaboration_service:dev ./collaboration_service"
        },
        {
          "label": "Build admin_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t admin_service:dev ./admin_service"
        },
        {
          "label": "Build ai_service Docker image (FastAPI)",
          "type": "shell",
          "command": "docker build -t ai_service:dev ./ai_service"
        },
        {
          "label": "Build ai_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t ai_service:dev ./analytics_service"
        },

        // NestJS Services
        {
          "label": "Build notification_service Docker image (NestJS)",
          "type": "shell",
          "command": "docker build -t notification_service:dev ./notification_service"
        },
        {
          "label": "Build social-media_service Docker image (Node.js/NestJS)",
          "type": "shell",
          "command": "docker build -t social-media_service:dev ./social-media_service"
        },
        {
          "label": "Build certification_service Docker image (Node.js/NestJS)",
          "type": "shell",
          "command": "docker build -t certification_service:dev ./certification_service"
        },

        // API Gateway
        {
          "label": "Build API-Gateway_service Docker image (Spring Boot)",
          "type": "shell",
          "command": "docker build -t api-gateway_service:dev ./API-Gateway_service"
        }

        // Additional services can be added here
      ]
    }
  }
}
